<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:base="https://causti.co/" xml:lang="en">
  <title>causti • co</title>
  <subtitle>all content</subtitle>
  <link href="https://causti.cofeed.xml" rel="self" />
  <link href="https://causti.co/" />
  <id>https://causti.co/</id>
  <updated>2024-08-01T00:00:00Z</updated>
  <author>
    <name>Martín Valdés de León</name>
  </author>
  <generator>Eleventy v2.0.1</generator>
  <icon>https://causti.co/assets/icons/favicon.png</icon>
  <rights>causti • co © 2024 by Martín Valdés de León, is licensed under CC BY-NC-ND 4.0</rights>
  <entry>
    <category term="text" />
    <title>Relative money</title>
    <link href="https://causti.co/text/008-relative-money/" />
    <link rel="alternate" type="text/html" href="https://causti.co/text/008-relative-money/" />
    <id>https://causti.co/text/008-relative-money/</id>
    <updated>2024-08-01T00:00:00Z</updated>
    <published>2024-08-01T00:00:00Z</published>
    <summary>how much is money worth to you? what about others? how do you think about it? let&#39;s talk.</summary>
    <content type="html">
      &lt;p&gt;I want to start talking about money. I think a lot of people have an absolutely unhealthy relationship with money, in a way that taints all of their social interactions, their perception of themselves and others, the way they establish relationships, etc.&lt;/p&gt;
&lt;p&gt;I also want to try something different, and rather than go for a more big-bang approach, try writing small snippets as I feel like it, and eventually re-edit them into an article, or make it a series. Anyway, let&#39;s start with something very simple. So simple that maybe most of you&#39;ve already thought of it. But I have to start somewhere.&lt;/p&gt;
&lt;h1&gt;How much is a million dollars, really?&lt;/h1&gt;
&lt;p&gt;That&#39;s the question that I want to answer. Or better said, I want to help you develop an instinct, so you can come up with an answer on your own. And the idea is very simple: start with the instincts you already have, and figure out the scaling factor.&lt;/p&gt;
&lt;p&gt;So, let&#39;s think about your instincts for a moment, by starting from the other extreme. Let&#39;s imagine you want to buy an item, and it costs $0.01. Do you need to think about this expense? Absolutely not. You can get 10 of it. Hell, you can buy 100 of them, and you still don&#39;t have to think about this expense. Let&#39;s bump it by one order of magnitude and try again. What about a $1 item. Do you need to think about this expense, or can you just get it? What about $10? $100? $1.000? $10.000?&lt;/p&gt;
&lt;p&gt;Now, please pay attention to what I&#39;m asking you to do here. I don&#39;t want to know if you can &lt;em&gt;afford&lt;/em&gt; the item. I want to know what&#39;s the highest it can cost, so that you can still buy it &lt;strong&gt;without having to think about how little money you&#39;re spending&lt;/strong&gt;. I don&#39;t know your financial situation, but I&#39;d expect this number to be in the $10 to $1.000 range. If you want another way of looking at it: What is the highest denomination bill you would feel comfortable &lt;em&gt;making it rain&lt;/em&gt;, without having to worry about how much money you&#39;d have left in your bank account the next morning.&lt;/p&gt;
&lt;p&gt;Once you&#39;ve found that value, make a two-column table, and write that value down in the first row. Write your current income next to it. On each subsequent row, multiply both numbers by 10. Eventually you&#39;ll get to $100.000, $1.000.000 and higher. And next to it, you&#39;ll have a reference income value. The conclusion should now be obvious: If you were making as much money as the number next to $1.000.000, &lt;strong&gt;you&#39;d be able to spend $1.000.000 without having to think about how little money you&#39;re spending&lt;/strong&gt;. That&#39;s the instinct.&lt;/p&gt;
&lt;p&gt;If you want, you can extend this concept a bit by adding a few categories more: &amp;quot;Don&#39;t have to think about it&amp;quot;, &amp;quot;Only once per month&amp;quot;, &amp;quot;Only once per year&amp;quot;, etc. Always sticking to whole order-of-magnitude values. Then see which income would give you this same &lt;em&gt;feeling&lt;/em&gt; for $1.000.000, or whichever figure you&#39;re curious about.&lt;/p&gt;

    </content>
  </entry>
  <entry>
    <category term="photo" />
    <title>rockstar</title>
    <link href="https://causti.co/photo/017-rockstar/" />
    <link rel="alternate" type="text/html" href="https://causti.co/photo/017-rockstar/" />
    <link rel="alternate" type="image/webp" href="https://causti.co/assets/photo/017-rockstar-3089w.webp" />
    <id>https://causti.co/photo/017-rockstar/</id>
    <updated>2024-08-01T00:00:00Z</updated>
    <published>2024-08-01T00:00:00Z</published>
    <summary>A hallway leading into a building, covered in tiles, with some tiles replaced by mirrors.</summary>
    <content type="html">
      &lt;img src=&quot;https://causti.co/assets/photo/017-rockstar-3089w.webp&quot; srcset=&quot;https://causti.co/assets/photo/017-rockstar-256w.webp 256w, https://causti.co/assets/photo/017-rockstar-880w.webp 880w, https://causti.co/assets/photo/017-rockstar-1220w.webp 1220w, https://causti.co/assets/photo/017-rockstar-1490w.webp 1490w, https://causti.co/assets/photo/017-rockstar-1710w.webp 1710w, https://causti.co/assets/photo/017-rockstar-1905w.webp 1905w, https://causti.co/assets/photo/017-rockstar-2048w.webp 2048w, https://causti.co/assets/photo/017-rockstar-3089w.webp 3089w&quot; sizes=&quot;100vw&quot; width=&quot;3089&quot; height=&quot;2048&quot; alt=&quot;A hallway leading into a building, covered in tiles, with some tiles replaced by mirrors.&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; /&gt;
    </content>
  </entry>
  <entry>
    <category term="photo" />
    <title>still life</title>
    <link href="https://causti.co/photo/016-still-life/" />
    <link rel="alternate" type="text/html" href="https://causti.co/photo/016-still-life/" />
    <link rel="alternate" type="image/webp" href="https://causti.co/assets/photo/016-still-life-4050w.webp" />
    <id>https://causti.co/photo/016-still-life/</id>
    <updated>2024-07-25T00:00:00Z</updated>
    <published>2024-07-25T00:00:00Z</published>
    <summary>A child lies across the seat of a train, sleeping, with one leg up on the arm rest.</summary>
    <content type="html">
      &lt;img src=&quot;https://causti.co/assets/photo/016-still-life-4050w.webp&quot; srcset=&quot;https://causti.co/assets/photo/016-still-life-256w.webp 256w, https://causti.co/assets/photo/016-still-life-880w.webp 880w, https://causti.co/assets/photo/016-still-life-1220w.webp 1220w, https://causti.co/assets/photo/016-still-life-1490w.webp 1490w, https://causti.co/assets/photo/016-still-life-1710w.webp 1710w, https://causti.co/assets/photo/016-still-life-1905w.webp 1905w, https://causti.co/assets/photo/016-still-life-2048w.webp 2048w, https://causti.co/assets/photo/016-still-life-4050w.webp 4050w&quot; sizes=&quot;100vw&quot; width=&quot;4050&quot; height=&quot;2648&quot; alt=&quot;A child lies across the seat of a train, sleeping, with one leg up on the arm rest.&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; /&gt;
    </content>
  </entry>
  <entry>
    <category term="text" />
    <title>Thinking about thinking</title>
    <link href="https://causti.co/text/007-thinking-about-thinking/" />
    <link rel="alternate" type="text/html" href="https://causti.co/text/007-thinking-about-thinking/" />
    <id>https://causti.co/text/007-thinking-about-thinking/</id>
    <updated>2024-07-21T00:00:00Z</updated>
    <published>2024-07-21T00:00:00Z</published>
    <summary>i&#39;ve been looking at my brain lately. it feels weird. makes me want to think. let me show you how.</summary>
    <content type="html">
      &lt;p&gt;I want to talk about how I think. Or perhaps I should say, about how I think that I think. As usual, these are ideas I&#39;ve had in my mind for a while, but that I never bothered trying to capture, write down, or formalize. Until now. I&#39;ve not done any research on this topic, so it&#39;s very likely I&#39;m just repeating something that someone else already noticed. Good for them. I don&#39;t really care.&lt;/p&gt;
&lt;p&gt;This essay is structured in two parts. First, I will introduce a model for rational thinking, and try to map back and forth from this model to some concepts that you should already be familiar with. Then, I will try to justify why I even introduce such a model in the first place by showing how it can be applied for a variety of situations.&lt;/p&gt;
&lt;p&gt;Let&#39;s get started.&lt;/p&gt;
&lt;h2&gt;Thinking as navigating a directed &lt;a href=&quot;https://causti.co/hypergraph&quot;&gt;hypergraph&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;How do you perceive the act of thinking? If you had to explain it to somebody, if you had to describe what it is exactly that you do when you&#39;re thinking, how would you do it?&lt;/p&gt;
&lt;p&gt;For me, it feels like solving a puzzle. I&#39;ve a bunch of pieces, and I&#39;m trying to make them fit with a specific purpose. Well, it turns out we can formalize this a bit if we try to express it in terms of &lt;a href=&quot;https://en.wikipedia.org/wiki/Graph_theory&quot;&gt;graph theory&lt;/a&gt;, as the process of building and subsequently navigating a directed hypergraph.&lt;/p&gt;
&lt;p&gt;We should start by defining our nodes and our edges. In the graphs we will be building, the nodes represent statements, &lt;a href=&quot;https://en.wikipedia.org/wiki/Proposition&quot;&gt;propositions&lt;/a&gt;, truths, facts, and similar &lt;a href=&quot;https://en.wikipedia.org/wiki/Truth-bearer&quot;&gt;bearing entities&lt;/a&gt;. And the edges represent operations, properties, theorems, definitions, that directionally connect multiple nodes. I&#39;m being deliberately vague here because I want to remain flexible, and also because I&#39;m too lazy to be more precise. Some examples should help to understand what I mean.&lt;/p&gt;
&lt;p&gt;The first trivial example would be the following graph that represents evaluating a mathematical expression:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://causti.co/assets/text/007-thinking-about-thinking-1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Here all the nodes are trivial bearing entities that represent the expressions or values themselves. And our directed edges represent the application of a given mathematical operator, which allow us to transform a given expression into a different but equivalent expression.&lt;/p&gt;
&lt;p&gt;But this is just an uncool, plain-old graph. There&#39;s nothing &lt;em&gt;hyper&lt;/em&gt; about it. Let&#39;s introduce the requirement of a hypergraph with a &lt;a href=&quot;https://en.wikipedia.org/wiki/Rolle%27s_theorem&quot;&gt;slightly more elaborate&lt;/a&gt; example:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://causti.co/assets/text/007-thinking-about-thinking-2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;We need a hypergraph to capture the requirement that some of our edges express a relation between multiple statements on one side, and potentially multiple statements on the other. This is nothing more than adding the capability to express &lt;a href=&quot;https://en.wikipedia.org/wiki/Logical_conjunction&quot;&gt;logical conjunction&lt;/a&gt; to our model. And before you ask, &lt;a href=&quot;https://en.wikipedia.org/wiki/Logical_disjunction&quot;&gt;logical disjunction&lt;/a&gt; is already trivially there. Can you see it? It&#39;s easier than you think, &lt;code&gt;(A | B) -&amp;gt; C&lt;/code&gt; is equivalent to &lt;code&gt;A -&amp;gt; C&lt;/code&gt; and &lt;code&gt;B -&amp;gt; C&lt;/code&gt;. Easy.&lt;/p&gt;
&lt;p&gt;I hope this is enough to paint the picture, because I don&#39;t want to do more examples. Rather, let&#39;s start thinking with it.&lt;/p&gt;
&lt;p&gt;Because the thing is, for a given particular instance of thinking the hypergraph itself does not yet exist (in most cases). It&#39;s something that we need to build on the spot, as we think along.&lt;/p&gt;
&lt;p&gt;To do so, we have a toolkit of edges at our disposal which we can constantly grow it by learning new shit, and how we build it will depend on the type of thinking we&#39;re trying to do. &lt;em&gt;&amp;quot;What do you mean with &#39;type of thinking&#39;?&amp;quot;&lt;/em&gt;, I hear you ask. And I&#39;m glad you did. I&#39;ll now define three distinct types of thinking, because I feel like it, and because it makes me sound smarter than I am.&lt;/p&gt;
&lt;h3&gt;Type A, or &amp;quot;Forward exploration&amp;quot;&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://causti.co/assets/text/007-thinking-about-thinking-3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;In Type A thinking we start from a set of &lt;em&gt;assumption&lt;/em&gt; statements and the goal is to start building the graph forwards to see to which new &lt;em&gt;conclusion&lt;/em&gt; statements it leads us. Ideally, we have some kind of goal or direction in which we want to go. Something we&#39;re trying to achieve. But this could also be a purely exploratory exercise, which is why I&#39;ve chosen to call it this way.&lt;/p&gt;
&lt;p&gt;We&#39;ve seen an example of this already: evaluating a mathematical expression. Here the goal is to operate on our single &lt;em&gt;assumption&lt;/em&gt; statement that represents an initial expression, until we reach a statement that represents an equivalent expression which we consider to be &amp;quot;irreducible&amp;quot;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Irreducibility_(mathematics)&quot;&gt;whatever that means for us&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Type B, or &amp;quot;Backward exploration&amp;quot;&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://causti.co/assets/text/007-thinking-about-thinking-4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Unsurprisingly, in Type B thinking we start from a set of &lt;em&gt;conclusion&lt;/em&gt; statements and the goal is to start building the graph backwards to see to which new &lt;em&gt;assumption&lt;/em&gt; statements it leads us.&lt;/p&gt;
&lt;p&gt;A typical example would be working backwards from a desired outcome such as moving to a different country. We start from the set of &lt;em&gt;conclusion&lt;/em&gt; statements that represent our desired outcome, and we can work backwards until we have a list of &lt;em&gt;assumption&lt;/em&gt; statements that we now need to go and fulfil, as well as a plan to achieve the desired outcome.&lt;/p&gt;
&lt;p&gt;Before we move to the last type, I want to note that in both Type A and Type B, we are allowed to go in the &amp;quot;opposite&amp;quot; direction, if that is of interest. We are, after all exploring. But we are trying to move in one particular direction, relative to our set of starting statements. In Type A, we will want to &amp;quot;start&amp;quot; from them, which is why I&#39;ve been calling them &amp;quot;assumptions&amp;quot;, without bothering to define what this means. Similarly, in Type B we will want to &amp;quot;arrive&amp;quot; at them, which is why I&#39;ve been calling them &amp;quot;conclusions&amp;quot;, without bothering to define what this means.&lt;/p&gt;
&lt;p&gt;Ok, lets move on.&lt;/p&gt;
&lt;h3&gt;Type C, or &amp;quot;Pathfinding&amp;quot;&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://causti.co/assets/text/007-thinking-about-thinking-5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;We&#39;ve seen what we can do with a set of &lt;em&gt;assumption&lt;/em&gt; statements, and what we can do with a set of &lt;em&gt;conclusion&lt;/em&gt; statements. So the obvious question is: What can we do if we have both? We can do Type C thinking.&lt;/p&gt;
&lt;p&gt;In Type C thinking we have both a set of &lt;em&gt;assumption&lt;/em&gt; statements and a set of &lt;em&gt;conclusion&lt;/em&gt; statements, and the goal is to start building the graph between them until we can build a path that connects them. Or is it? We can define two different subtypes for Type C thinking.&lt;/p&gt;
&lt;h4&gt;Subtype C+&lt;/h4&gt;
&lt;p&gt;The first subtype is where the goal is to build this path. Usually there&#39;s no prescribed way to proceed, we could choose to start from the &lt;em&gt;assumption&lt;/em&gt; statements and work our way forwards Type A style, we could start from the &lt;em&gt;conclusion&lt;/em&gt; statements and work our way backwards Type B style, or do both and aim at meeting somewhere in the middle. The precise choice will depend on the specific statements, and the edges available in our toolbox. Instinct/gut feeling plays a big role here. Sometimes &lt;em&gt;you just know&lt;/em&gt; in which direction to start exploring. It&#39;s hard to describe. All I know is that I remember not having this ability, and then having it. All I did in between was just practice.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://causti.co/assets/text/007-thinking-about-thinking-6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;A common strategy, in which this instinct/gut feeling plays a facilitating role, is to identify &lt;em&gt;good&lt;/em&gt; intermediate statements. Statements that are not trivially equivalent to the source or destination statements, but for which you have a very good confidence that you can build a path to either. So you might as well try to build a path from this intermediate state and see if the way to the other side becomes clearer.&lt;/p&gt;
&lt;h4&gt;Subtype C-&lt;/h4&gt;
&lt;p&gt;The second subtype is where the goal is not to build a path between our &lt;em&gt;assumption&lt;/em&gt; and &lt;em&gt;conclusion&lt;/em&gt; statements, but rather to show that it is impossible to build such a path, no matter how much we were to try.&lt;/p&gt;
&lt;p&gt;This is not as easy as it might seem. If we only had a very limited toolbox of edges, we could somehow &amp;quot;try them all&amp;quot; in all possible combinations and show that the statements are impossible to connect. But when the toolbox of edges is potentially infinite, and even worse, when we cannot afford to restrict our claims to apply only to the edges that we already know... how could we ever be certain that it&#39;s impossible to connect them, and not that we&#39;ve simply yet to learn the one edge that will solve all of our problems?&lt;/p&gt;
&lt;p&gt;Well... What if we could build a path between the &lt;em&gt;assumption&lt;/em&gt; statements and a statement that contradicts the &lt;em&gt;conclusion&lt;/em&gt; statements? Or perhaps the other way around, between the &lt;em&gt;conclusion&lt;/em&gt; statements and a statement that contradicts the &lt;em&gt;assumption&lt;/em&gt; statements? Then it kinda works, right? Never mind that I&#39;ve not defined what &amp;quot;contradicts&amp;quot; means, just vibe with it. Because if we can show that this path exists, then either the &lt;em&gt;assumption&lt;/em&gt; or the &lt;em&gt;conclusion&lt;/em&gt; statements cannot must not hold if the other does. Thus, there cannot be any paths. Or more accurately: were such a path to exist, our entire model of the world would lose consistency. And this cannot be allowed to happen.&lt;/p&gt;
&lt;p&gt;You may notice that this technique also works for the Subtype C+: If we want to build a path between &lt;em&gt;assumption&lt;/em&gt; and &lt;em&gt;conclusion&lt;/em&gt; statements, we could show that it is possible to build a path between the opposite of the &lt;em&gt;conclusion&lt;/em&gt; statement and a statement that contradicts the &lt;em&gt;assumption&lt;/em&gt; statements. That also kinda works, right? Never mind that I&#39;ve not defined what &amp;quot;opposite&amp;quot; means, just vibe with it. Since we know the &lt;em&gt;assumption&lt;/em&gt; statements to be true, then the &lt;em&gt;conclusion&lt;/em&gt; statements must also hold to avoid this contradiction.&lt;/p&gt;
&lt;h2&gt;So what?&lt;/h2&gt;
&lt;p&gt;If you&#39;re in any way like me, either you&#39;ve just spent the last... I want to say 8 minutes... asking why I&#39;m wasting your time stating the obvious, or further convincing yourself that I&#39;m an idiot. Which is to say: Either what I&#39;ve just described resonates strongly with what you call &amp;quot;thinking&amp;quot;, or it doesn&#39;t.&lt;/p&gt;
&lt;p&gt;The beauty for me is that, while I&#39;ve used a couple of mathematical examples so far, this model can be applied to any other scenario where any kind of rational thinking is required. It should not be challenging to see how it can be used to express &lt;a href=&quot;https://en.wikipedia.org/wiki/Deductive_reasoning&quot;&gt;deductive reasoning&lt;/a&gt;, a &lt;a href=&quot;https://en.wikipedia.org/wiki/Markov_chain&quot;&gt;Markov process&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Chemical_synthesis&quot;&gt;chemical synthesis&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Retrosynthetic_analysis&quot;&gt;retrosynthetic analysis&lt;/a&gt;, and probably even more things that I can&#39;t think of right now or that I&#39;ve not learned about yet.&lt;/p&gt;
&lt;p&gt;And there&#39;s a couple more things that I&#39;d like to talk about before wrapping things up.&lt;/p&gt;
&lt;h3&gt;Learning as hypergraph building&lt;/h3&gt;
&lt;p&gt;I said that the hypergraph does not exist, and that the thinking process is analogous to building this graph on the spot with a specific purpose. This would be a pure &lt;a href=&quot;https://en.wikipedia.org/wiki/Ab_initio&quot;&gt;ab initio&lt;/a&gt; approach, and it&#39;s not the only approach possible. What if we already had some parts of our hypergraph pre-built?&lt;/p&gt;
&lt;p&gt;Here is important to notice that not all statements are created equal. It makes no sense to pre-build a graph for evaluating mathematical expressions, because there are an infinite number of potential mathematical expressions to evaluate. But with more limited sets of statements, it might make sense. I&#39;m sure you&#39;ve memorized your multiplication tables, or some indefinite integrals that you could just as easily calculate &lt;a href=&quot;https://en.wikipedia.org/wiki/Integration_by_parts&quot;&gt;integrating by parts&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Within the terms of this model, a first order approach to learning would be just memorizing new statements and adding new edges to our toolbox, to be used in the future when needed. Which we can distinguish from a second order approach to learning, where we aim to identify which parts of the hypergraph are worth building in advance, so that we can benefit from not having to reinvent the wheel on the spot every time. This is commonly achieved via repetition, rather than by pure memorization.&lt;/p&gt;
&lt;h3&gt;Keeping a consistent model of the world&lt;/h3&gt;
&lt;p&gt;Let&#39;s go back for a moment to that &amp;quot;contradicts&amp;quot; thing. No, I don&#39;t mean the fact that I&#39;ve not defined it, you can &lt;a href=&quot;https://en.wikipedia.org/wiki/Contradiction&quot;&gt;look for definitions&lt;/a&gt; or just continue to vibe with it. I want to go back to what I said about the consistency of our model of the world. If you start to engage in what I&#39;ve just called second order learning, you will start to build an ever-growing hypergraph that will be your companion for the rest of your life. This is your model of the world. It connects all the different things you&#39;ve learned and ties them all together. This is, fundamentally, how smart you really are. You must protect it with your life, and there are two things that you cannot allow to happen.&lt;/p&gt;
&lt;p&gt;The first one is obvious enough: you must avoid learning falsehoods. If you learn falsehoods, you will arrive to incorrect conclusions while believing to be correct. Even worse, if you let this go unnoticed second order learning will propagate this falsehood through your entire model of the world, poisoning it. This takes time to identify and fix, and &lt;a href=&quot;https://causti.co/text/006-on-teaching/&quot;&gt;I&#39;ve written about it already&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The second one is a bit more tricky: you must avoid inconsistencies. Ultimately, this is a corollary of the previous one, since the reason inconsistencies arise is because of falsehoods. The reason I call it out separately is because of the nature of the falsehoods involved. Inconsistencies arise not due to outright falsehoods, but rather to subtle misconceptions on otherwise correct statements such as making incorrect generalizations. Also, inconsistencies are most likely to go unnoticed for a long time. While falsehoods will lead to incorrect conclusions immediately, an inconsistency will not be noticed until you learn a conflicting statement sometime later. And then you&#39;ll have a problem: You&#39;ll need to judge if the new statement that you&#39;re trying to add to your model of the world might be a falsehood, or if you need to reevaluate your model of the world because something in there cannot be quite true. You might not even notice the inconsistency and learn the conflicting statement without thinking twice about it, only to find yourself absolutely lost and confused when you try to use your model of the world at a later point in time.&lt;/p&gt;
&lt;p&gt;This is for me the complete model of learning, that I might be tempted to call third order learning: You memorize new statements. You add new edges to your toolbox. You build your hypergraph in advance, and you keep going until you can be sure that the new statements are absolutely in agreement with the rest of your model of the world. If any conflicts are identified, you resolve them on the spot. I don&#39;t remember the exact example, but I do remember the situation (multiple, in fact) where I did not allow a professor to move forwards with their lecture because they&#39;ve just delivered a statement that, were I to take it as-is, would introduce an inconsistency in my model of the world. I could not let that happen. If I did, it would mean that I&#39;d effectively be leaving that class knowing less than when I came in. Come the fuck on.&lt;/p&gt;
&lt;h3&gt;By any other name&lt;/h3&gt;
&lt;p&gt;If we take another look at Type C thinking within a mathematical context, can you think of another name for it? You&#39;re trying to show, by applying a set of rules and principles, that you can use a given set of assumptions to guarantee a given conclusion. You&#39;re building a &lt;a href=&quot;https://en.wikipedia.org/wiki/Mathematical_proof&quot;&gt;mathematical proof&lt;/a&gt;. And when we applied the technique used for Subtype C- on Subtype C+, that was &lt;a href=&quot;https://en.wikipedia.org/wiki/Proof_by_contradiction&quot;&gt;proof by contradiction&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The observation here should be that building a mathematical proof is not a unique type of thinking. It&#39;s the same Type C thinking that you&#39;d use when solving any other kind of problem. If you can write a proof, you can argue a case in front of a judge. You just gotta make sure your model of the legal world is good enough. You&#39;re missing the facts. But you&#39;re not missing the process.&lt;/p&gt;
&lt;h3&gt;Thinking about code&lt;/h3&gt;
&lt;p&gt;The final example I want to give of Type C thinking is how I think when writing code, and the reason why I love Haskell. I see writing code as trying to go from an initial set of types that codify my program&#39;s input to a final set of types that codify my program&#39;s output. The model of the world is made out of the different elements the programming language and its libraries give you to manipulate data and transform it or combine it from some given types into some other types. What in the context of logical thinking would be a &lt;a href=&quot;https://en.wikipedia.org/wiki/Hypothetical_syllogism&quot;&gt;hypothetical syllogism&lt;/a&gt;, we just call &lt;a href=&quot;https://en.wikipedia.org/wiki/Function_composition_(computer_science)&quot;&gt;function composition&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;All I have to do is find a path from my input types to my output types. If I can find this path, I solved the problem. And as with all Type C thinking, instinct plays a big role. Instinct will tell you that certain intermediate representations are likely to be useful. So I&#39;ll define those types as well. And instinct will also guide you in learning to identify the ways in which different types are or are not equivalent, and in the cases where they are not, what additional data is required to transform one into the other.&lt;/p&gt;
&lt;p&gt;In a graph where the nodes are types are the edges are functions, I can use Type C thinking to write the entire skeleton of a program just at the type level, with a minimal implementation limited to glue code just to make sure all the pieces fit together but without any actual business logic. And if this type-checks, I&#39;m almost certain that the code will just work once I implement it. Any errors past this point are usually me failing to properly understand the problem, and actually solving an entirely different problem.&lt;/p&gt;
&lt;p&gt;I could show you how to put this into practice, but I believe that&#39;s better suited for a video than an article. For the moment, this will have to do. I&#39;ve shared what I wanted to share. Now you think about it.&lt;/p&gt;

    </content>
  </entry>
  <entry>
    <category term="photo" />
    <title>silence</title>
    <link href="https://causti.co/photo/014-silence/" />
    <link rel="alternate" type="text/html" href="https://causti.co/photo/014-silence/" />
    <link rel="alternate" type="image/webp" href="https://causti.co/assets/photo/014-silence-4272w.webp" />
    <id>https://causti.co/photo/014-silence/</id>
    <updated>2024-07-21T00:00:00Z</updated>
    <published>2024-07-21T00:00:00Z</published>
    <summary>A single microwave antena sits atop a modern building.</summary>
    <content type="html">
      &lt;img src=&quot;https://causti.co/assets/photo/014-silence-4272w.webp&quot; srcset=&quot;https://causti.co/assets/photo/014-silence-256w.webp 256w, https://causti.co/assets/photo/014-silence-880w.webp 880w, https://causti.co/assets/photo/014-silence-1220w.webp 1220w, https://causti.co/assets/photo/014-silence-1490w.webp 1490w, https://causti.co/assets/photo/014-silence-1710w.webp 1710w, https://causti.co/assets/photo/014-silence-1905w.webp 1905w, https://causti.co/assets/photo/014-silence-2048w.webp 2048w, https://causti.co/assets/photo/014-silence-4272w.webp 4272w&quot; sizes=&quot;100vw&quot; width=&quot;4272&quot; height=&quot;2403&quot; alt=&quot;A single microwave antena sits atop a modern building.&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; /&gt;
    </content>
  </entry>
  <entry>
    <category term="photo" />
    <title>fumbled it</title>
    <link href="https://causti.co/photo/015-fumbled-it/" />
    <link rel="alternate" type="text/html" href="https://causti.co/photo/015-fumbled-it/" />
    <link rel="alternate" type="image/webp" href="https://causti.co/assets/photo/015-fumbled-it-1879w.webp" />
    <id>https://causti.co/photo/015-fumbled-it/</id>
    <updated>2024-07-21T00:00:00Z</updated>
    <published>2024-07-21T00:00:00Z</published>
    <summary>Looking down the hallway from the interior of a train. At the end of the hallway, a woman has just turned the corner away from you.</summary>
    <content type="html">
      &lt;img src=&quot;https://causti.co/assets/photo/015-fumbled-it-1879w.webp&quot; srcset=&quot;https://causti.co/assets/photo/015-fumbled-it-256w.webp 256w, https://causti.co/assets/photo/015-fumbled-it-880w.webp 880w, https://causti.co/assets/photo/015-fumbled-it-1220w.webp 1220w, https://causti.co/assets/photo/015-fumbled-it-1490w.webp 1490w, https://causti.co/assets/photo/015-fumbled-it-1710w.webp 1710w, https://causti.co/assets/photo/015-fumbled-it-1879w.webp 1879w&quot; sizes=&quot;100vw&quot; width=&quot;1879&quot; height=&quot;2992&quot; alt=&quot;Looking down the hallway from the interior of a train. At the end of the hallway, a woman has just turned the corner away from you.&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; /&gt;
    </content>
  </entry>
  <entry>
    <category term="photo" />
    <title>mothra</title>
    <link href="https://causti.co/photo/013-mothra/" />
    <link rel="alternate" type="text/html" href="https://causti.co/photo/013-mothra/" />
    <link rel="alternate" type="image/webp" href="https://causti.co/assets/photo/013-mothra-2679w.webp" />
    <id>https://causti.co/photo/013-mothra/</id>
    <updated>2024-05-26T00:00:00Z</updated>
    <published>2024-05-26T00:00:00Z</published>
    <summary>A grid of metal stripes, some of them slightly deformed, covering a single horizontal tube of fluorecent light.</summary>
    <content type="html">
      &lt;img src=&quot;https://causti.co/assets/photo/013-mothra-2679w.webp&quot; srcset=&quot;https://causti.co/assets/photo/013-mothra-256w.webp 256w, https://causti.co/assets/photo/013-mothra-880w.webp 880w, https://causti.co/assets/photo/013-mothra-1220w.webp 1220w, https://causti.co/assets/photo/013-mothra-1490w.webp 1490w, https://causti.co/assets/photo/013-mothra-1710w.webp 1710w, https://causti.co/assets/photo/013-mothra-1905w.webp 1905w, https://causti.co/assets/photo/013-mothra-2048w.webp 2048w, https://causti.co/assets/photo/013-mothra-2679w.webp 2679w&quot; sizes=&quot;100vw&quot; width=&quot;2679&quot; height=&quot;2679&quot; alt=&quot;A grid of metal stripes, some of them slightly deformed, covering a single horizontal tube of fluorecent light.&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; /&gt;
    </content>
  </entry>
  <entry>
    <category term="photo" />
    <title>what am i doing except being here</title>
    <link href="https://causti.co/photo/012-what-am-i-doing-except-being-here/" />
    <link rel="alternate" type="text/html" href="https://causti.co/photo/012-what-am-i-doing-except-being-here/" />
    <link rel="alternate" type="image/webp" href="https://causti.co/assets/photo/012-what-am-i-doing-except-being-here-4160w.webp" />
    <id>https://causti.co/photo/012-what-am-i-doing-except-being-here/</id>
    <updated>2024-05-25T00:00:00Z</updated>
    <published>2024-05-25T00:00:00Z</published>
    <summary>The street outside of a parking garage, during the night. A dim light shines from the parking garage wall, higlighting its geometric patterns. The pavement is wet from the rain.</summary>
    <content type="html">
      &lt;img src=&quot;https://causti.co/assets/photo/012-what-am-i-doing-except-being-here-4160w.webp&quot; srcset=&quot;https://causti.co/assets/photo/012-what-am-i-doing-except-being-here-256w.webp 256w, https://causti.co/assets/photo/012-what-am-i-doing-except-being-here-880w.webp 880w, https://causti.co/assets/photo/012-what-am-i-doing-except-being-here-1220w.webp 1220w, https://causti.co/assets/photo/012-what-am-i-doing-except-being-here-1490w.webp 1490w, https://causti.co/assets/photo/012-what-am-i-doing-except-being-here-1710w.webp 1710w, https://causti.co/assets/photo/012-what-am-i-doing-except-being-here-1905w.webp 1905w, https://causti.co/assets/photo/012-what-am-i-doing-except-being-here-2048w.webp 2048w, https://causti.co/assets/photo/012-what-am-i-doing-except-being-here-4160w.webp 4160w&quot; sizes=&quot;100vw&quot; width=&quot;4160&quot; height=&quot;4160&quot; alt=&quot;The street outside of a parking garage, during the night. A dim light shines from the parking garage wall, higlighting its geometric patterns. The pavement is wet from the rain.&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; /&gt;
    </content>
  </entry>
  <entry>
    <category term="recs" />
    <title>Brazil</title>
    <link href="https://causti.co/recs/" />
    <link rel="alternate" type="text/html" href="https://causti.co/recs/" />
    <link rel="related" type="text/html" href="https://www.youtube.com/watch?v=A_7ATU9dslE" />
    <link rel="alternate" type="image/jpeg" href="https://causti.co/assets/recs/006-brazil.jpg" />
    <id>https://causti.co/recs/</id>
    <updated>2024-05-25T00:00:00Z</updated>
    <published>2024-05-25T00:00:00Z</published>
    <summary>Brazil</summary>
    <content type="html">
      &lt;p&gt;&lt;a href=&quot;http://terrygilliamweb.com/&quot;&gt;Terry Gilliam&lt;/a&gt; is responsible for two of the movies that I can just keep watching over and over again, and Brazil is one of them.&lt;/p&gt;
&lt;p&gt;An anachronistically modern horror movie, where bureaucracy is the monster, and it cannot be defeated. Do you have the right form? Is it stamped? Every nail we take from your fingers is costing the Government money. You will be invoiced. Think of your credit.&lt;/p&gt;
&lt;p&gt;Don&#39;t worry. It&#39;s just a movie. This is not real.&lt;/p&gt;

    </content>
  </entry>
  <entry>
    <category term="text" />
    <title>Thoughts on teaching</title>
    <link href="https://causti.co/text/006-on-teaching/" />
    <link rel="alternate" type="text/html" href="https://causti.co/text/006-on-teaching/" />
    <id>https://causti.co/text/006-on-teaching/</id>
    <updated>2024-04-26T00:00:00Z</updated>
    <published>2024-04-26T00:00:00Z</published>
    <summary>i would be so happy, if i were a teacher. but i&#39;d be broke. somehow what i do now is more important to society.</summary>
    <content type="html">
      &lt;p&gt;I guess most people don&#39;t know, but a for a few years before moving to Germany I was a member of the &lt;a href=&quot;https://www.partidosocialista.org.ar/&quot;&gt;Argentinean Socialist Party&lt;/a&gt;. There&#39;s some fun stories of &lt;em&gt;light political vandalism&lt;/em&gt; to be told, but I&#39;ll save those for another time. The main thing I did as a party member was provide &lt;a href=&quot;https://en.wikipedia.org/wiki/Remedial_education&quot;&gt;remedial education&lt;/a&gt; to whomever would show up at the local party office every Saturday afternoon, which would be a mixture of children currently at elementary or high school, as well as older people going through &lt;a href=&quot;https://en.wikipedia.org/wiki/Adult_education&quot;&gt;adult education&lt;/a&gt;, mostly high-school.&lt;/p&gt;
&lt;p&gt;It was usually me and one or two more tutors, and we would pick up whichever topic was needed: mathematics, physics, chemistry, history, grammar, you name it. And we&#39;re talking remedial education, so these were not students who were cruising through their classes, rather the opposite. They were usually struggling, and their families were not able to afford a private tutor. Needless to say, I have absolutely no training as an educator, but I was willing to admit my ignorance and use it as a starting point to learn.&lt;/p&gt;
&lt;h2&gt;There are no stupid students&lt;/h2&gt;
&lt;p&gt;My main take-away was that there is no such a thing as a stupid student. There is such a thing, however, as a horrible teacher. The one thing that every single person I tutored was in dire need for, was time. Having someone sit next to them, engage with them as they solve a problem, ask them to guide you through their actions and though process, and take the time to understand how they see things. And that was mostly all I had to do, offer them my time.&lt;/p&gt;
&lt;p&gt;By sitting next to them, I noticed an interesting thing: These people rarely made any &lt;em&gt;mistakes&lt;/em&gt;. By this I mean things like &amp;quot;forgetting&amp;quot; to carry over a minus sign from a previous line or silly things like that. These were universally scarce, and all you had to do was point them out. Once you did, they were as obvious to them as they were to me.&lt;/p&gt;
&lt;p&gt;But they were still getting the answers to their exercises wrong.&lt;/p&gt;
&lt;p&gt;Not because they were making mistakes, but because they were operating logically and rationally based on a model of the world that was no longer sound. They had allowed a single falsehood to ingrain itself into their model of the world, and none of their teachers was able to notice and correct this in time.&lt;/p&gt;
&lt;p&gt;That became my job. Sit next to them, let them work through a problem, and whenever I spotted something that was off, start working backwards until I could finally arrive to this single falsehood and correct it. And then, it&#39;s as if you had suddenly removed stone that was jamming a gear mechanism. Everything else suddenly clicks into place, and all of a sudden they are getting all the exercises right (And if you&#39;re thinking &amp;quot;Hey, that sounds an awful lot like debugging code&amp;quot; then you&#39;ll most likely enjoy my upcoming article on debugging).&lt;/p&gt;
&lt;p&gt;Imagine how frustrated you would feel if you did everything you thought was right, and still arrived at an incorrect result, and got absolutely no feedback as to why or how to address it, only that you got it wrong and you suck.&lt;/p&gt;
&lt;h2&gt;Work is not that different&lt;/h2&gt;
&lt;p&gt;At this point in my career, I&#39;m mostly paid to write and talk to people. And some of the people I have to talk to are wrong. Now, here&#39;s a funny thing about people for all the non-humans out there reading this: People &lt;strong&gt;really do not like&lt;/strong&gt; being told they are wrong. Luckily, many of the things we just mentioned are still valid in this context.&lt;/p&gt;
&lt;p&gt;People who are wrong, for the most part, are not making &lt;em&gt;mistakes&lt;/em&gt; when they arrive to a wrong conclusion. They are acting logically and rationally, but there&#39;s something in their model of the world that is off. There are a couple of differences that we need to account for, however.&lt;/p&gt;
&lt;p&gt;First, unlike students, these people are not in the room with me &lt;em&gt;to be taught&lt;/em&gt;. In the best case they are looking for advice as peers, and in the worst case they think I&#39;m there to try and sell them something. So even if I can identify the falsehood in their world model, I need to guide them into noticing it themselves, rather than pointing it out directly. Otherwise, they&#39;ll most likely reject it. I&#39;d say that this feels more like therapy, but my understanding of therapy is based purely on &lt;a href=&quot;https://tvtropes.org/pmwiki/pmwiki.php/Main/HollywoodPsych&quot;&gt;US fiction&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Second, &lt;strong&gt;they might actually be right&lt;/strong&gt;. When a student makes a mistake, there&#39;s usually no room for debate. But in this case, I always have to entertain the notion that it might be me who is wrong. I&#39;m not &lt;em&gt;that&lt;/em&gt; full of myself. This is also inherently a good thing: It&#39;s how I grow. I am my worst, most relentless critic, and this helps keep myself in check.&lt;/p&gt;
&lt;p&gt;A framework I&#39;ve found incredibly helpful in both helping me explore the possibility that I might be wrong, as well as helping me identify the potential falsehood in someone&#39;s world model, is to honestly ask myself:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What do they know that I don&#39;t know?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;What vital piece of information am I missing, that where I to add it to my own world model, would cause me to arrive to the same conclusion as they are?&lt;/p&gt;
&lt;p&gt;Work backwards from their apparently wrong conclusion, applying logic and reason, and reverse-engineer a path to the knowledge that you might be lacking. If you&#39;re only going to take one thing away from this article, this should be it.&lt;/p&gt;
&lt;p&gt;There&#39;s another silly anecdote that comes to mind about the multiple choice exams I had to take for my introductory &lt;a href=&quot;http://www.mate.cbc.uba.ar/27/teoricas.htm&quot;&gt;Algebra&lt;/a&gt; and &lt;a href=&quot;http://www.mate.cbc.uba.ar/66/teoricas.htm&quot;&gt;Calculus&lt;/a&gt; courses, but that too will have to wait for another time.&lt;/p&gt;

    </content>
  </entry>
  <entry>
    <category term="photo" />
    <title>still waiting</title>
    <link href="https://causti.co/photo/011-still-waiting/" />
    <link rel="alternate" type="text/html" href="https://causti.co/photo/011-still-waiting/" />
    <link rel="alternate" type="image/webp" href="https://causti.co/assets/photo/011-still-waiting-4160w.webp" />
    <id>https://causti.co/photo/011-still-waiting/</id>
    <updated>2024-04-26T00:00:00Z</updated>
    <published>2024-04-26T00:00:00Z</published>
    <summary>An information stall inside a Barcelona subway station. There&#39;s a bright red SOS sign, a yellow telephone, and two well-lit maps.</summary>
    <content type="html">
      &lt;img src=&quot;https://causti.co/assets/photo/011-still-waiting-4160w.webp&quot; srcset=&quot;https://causti.co/assets/photo/011-still-waiting-256w.webp 256w, https://causti.co/assets/photo/011-still-waiting-880w.webp 880w, https://causti.co/assets/photo/011-still-waiting-1220w.webp 1220w, https://causti.co/assets/photo/011-still-waiting-1490w.webp 1490w, https://causti.co/assets/photo/011-still-waiting-1710w.webp 1710w, https://causti.co/assets/photo/011-still-waiting-1905w.webp 1905w, https://causti.co/assets/photo/011-still-waiting-2048w.webp 2048w, https://causti.co/assets/photo/011-still-waiting-4160w.webp 4160w&quot; sizes=&quot;100vw&quot; width=&quot;4160&quot; height=&quot;4160&quot; alt=&quot;An information stall inside a Barcelona subway station. There&#39;s a bright red SOS sign, a yellow telephone, and two well-lit maps.&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; /&gt;
    </content>
  </entry>
  <entry>
    <category term="recs" />
    <title>Serial Experiments Lain</title>
    <link href="https://causti.co/recs/" />
    <link rel="alternate" type="text/html" href="https://causti.co/recs/" />
    <link rel="related" type="text/html" href="https://archive.org/details/09-sel-protocol/01SEL+Weird.mp4" />
    <link rel="alternate" type="image/jpeg" href="https://causti.co/assets/recs/005-lain.jpg" />
    <id>https://causti.co/recs/</id>
    <updated>2024-04-26T00:00:00Z</updated>
    <published>2024-04-26T00:00:00Z</published>
    <summary>Serial Experiments Lain</summary>
    <content type="html">
      &lt;p&gt;A recurring topic in &lt;a href=&quot;https://en.wikipedia.org/wiki/Cyberpunk&quot;&gt;Cyberpunk literature&lt;/a&gt; deals with questioning our perception and definition of reality, with technology playing the role of an enabler that can tear down the barriers between the realm of reality and humans, and that of virtuality and artificial intelligence.&lt;/p&gt;
&lt;p&gt;Does it make Gods out of hackers? Or does it make software out of humans? Will our bodies enable us, or constrain us?&lt;/p&gt;
&lt;p&gt;Present day... present time...&lt;/p&gt;

    </content>
  </entry>
  <entry>
    <category term="photo" />
    <title>zeit;raum</title>
    <link href="https://causti.co/photo/010-zeit-raum/" />
    <link rel="alternate" type="text/html" href="https://causti.co/photo/010-zeit-raum/" />
    <link rel="alternate" type="image/webp" href="https://causti.co/assets/photo/010-zeit-raum-4272w.webp" />
    <id>https://causti.co/photo/010-zeit-raum/</id>
    <updated>2024-04-20T00:00:00Z</updated>
    <published>2024-04-20T00:00:00Z</published>
    <summary>The corner of a dimly lit empty bed, in the corner of a room. The bedsheets are tossed and the walls are filthy.</summary>
    <content type="html">
      &lt;img src=&quot;https://causti.co/assets/photo/010-zeit-raum-4272w.webp&quot; srcset=&quot;https://causti.co/assets/photo/010-zeit-raum-256w.webp 256w, https://causti.co/assets/photo/010-zeit-raum-880w.webp 880w, https://causti.co/assets/photo/010-zeit-raum-1220w.webp 1220w, https://causti.co/assets/photo/010-zeit-raum-1490w.webp 1490w, https://causti.co/assets/photo/010-zeit-raum-1710w.webp 1710w, https://causti.co/assets/photo/010-zeit-raum-1905w.webp 1905w, https://causti.co/assets/photo/010-zeit-raum-2048w.webp 2048w, https://causti.co/assets/photo/010-zeit-raum-4272w.webp 4272w&quot; sizes=&quot;100vw&quot; width=&quot;4272&quot; height=&quot;2848&quot; alt=&quot;The corner of a dimly lit empty bed, in the corner of a room. The bedsheets are tossed and the walls are filthy.&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; /&gt;
    </content>
  </entry>
  <entry>
    <category term="text" />
    <title>How does this website work</title>
    <link href="https://causti.co/text/005-website-stack/" />
    <link rel="alternate" type="text/html" href="https://causti.co/text/005-website-stack/" />
    <id>https://causti.co/text/005-website-stack/</id>
    <updated>2024-04-19T00:00:00Z</updated>
    <published>2024-04-19T00:00:00Z</published>
    <summary>it&#39;s the personal website bottle episode! but i&#39;ll try to keep it interesting. maybe you learn something. maybe you get inspired. we need more personal websites.</summary>
    <content type="html">
      &lt;p&gt;It&#39;s the obligatory &amp;quot;how does this website work&amp;quot; blog post!&lt;/p&gt;
&lt;p&gt;I&#39;ll try to keep this one on the less-refined side of things, but let&#39;s see. First off, I assume you already checked the &lt;a href=&quot;https://causti.co/about/&quot;&gt;about&lt;/a&gt; page, which gives a very quick overview of why this place even exists in the first place.&lt;/p&gt;
&lt;p&gt;So I wanted to have a personal website. I&#39;ve had the idea on my mind for a while, and mostly kept postponing it to avoid having to deal with the design-side of things. I&#39;ve never been on the artistic side so the kind of things I can come up with on my own is quite limited, but after looking at some older software UIs for inspiration I decided to just get something out there, so I could move on to actually writing content.&lt;/p&gt;
&lt;h2&gt;html/css&lt;/h2&gt;
&lt;p&gt;I did the first design directly in HTML and CSS. And if HTML had some kind of native way of code reuse/includes, I might&#39;ve been tempted to just stick to writing HTML for my content. But soon enough I found myself wanting to test more than a single page at a time, and that meant I had to create multiple HTML files, and at that point making a change meant having to make that same change across multiple files.&lt;/p&gt;
&lt;p&gt;A few decisions I made at this stage: 1/ No 3rd party resources, 2/ Don&#39;t do anything that would require a cookie banner, 3/ Avoid JS as much as possible, 4/ Don&#39;t bother with older browsers (yes, this includes IE11).&lt;/p&gt;
&lt;h2&gt;11ty&lt;/h2&gt;
&lt;p&gt;Since I wanted to keep things as simple as possible, a &amp;quot;traditional&amp;quot; n-tier stack was absolutely out of the question. The alternative was to use a static site generator. After reviewing the most popular choices, I settled for &lt;a href=&quot;https://github.com/11ty/eleventy/&quot;&gt;11ty&lt;/a&gt; as it appeared to be the least opinionated one of the bunch, allowing me to start with an empty directory and slowly bring content and complexity in as needed. I followed my traditional approach of reading the entire docs to figure out what it can and cannot do before getting to adapting my static content to &lt;a href=&quot;https://mozilla.github.io/nunjucks/&quot;&gt;nunjucks&lt;/a&gt;. I chose nunjucks simply because it was the default templating language used in the documentation.&lt;/p&gt;
&lt;p&gt;Lastly, I decided to manually number content items by adopting the following naming convention: &lt;code&gt;###-desired-content-url.ext&lt;/code&gt;, and to manually provide content dates via Front Matter data, rather than use the mechanisms provided by 11ty based on either file system or Git dates.&lt;/p&gt;
&lt;h3&gt;Folder structure&lt;/h3&gt;
&lt;pre class=&quot;shiki rose-pine-dawn tree&quot; style=&quot;background-color:#faf4ed;color:#575279&quot;&gt;&lt;code class=&quot;language-txt&quot;&gt;&lt;span class=&quot;line&quot;&gt;&lt;span&gt;website/&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span&gt;├─ dist/&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span&gt;├─ src/&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span&gt;   ├─ _data/&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span&gt;   ├─ _includes/&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span&gt;   ├─ about/&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span&gt;   ├─ assets/&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span&gt;   │  ├─ fonts/&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span&gt;   │  ├─ icons/&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span&gt;   │  ├─ images/&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span&gt;   │  ├─ styles/&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span&gt;   ├─ photo/&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span&gt;   │  ├─ _drafts/&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span&gt;   ├─ recs/&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span&gt;   ├─ text/&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span&gt;      ├─ _drafts/&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Sass&lt;/h3&gt;
&lt;p&gt;I migrated all the styles from CSS to SCSS, since writing plain CSS is extremely repetitive. I&#39;m using the &lt;a href=&quot;https://github.com/kentaroi/eleventy-sass&quot;&gt;eleventy-sass&lt;/a&gt; plugin with no further configuration. Setting the &lt;code&gt;ELEVENTY_ENV&lt;/code&gt; &lt;a href=&quot;https://causti.co/text/002-environment-variables/&quot;&gt;environment variable&lt;/a&gt; to a non-production value will generate uncompressed CSS with source maps, which is nice.&lt;/p&gt;
&lt;h3&gt;Custom collections&lt;/h3&gt;
&lt;p&gt;My first challenge was implementing the &amp;quot;group by month+year&amp;quot; feature I had mocked up for the &lt;a href=&quot;https://causti.co/text/&quot;&gt;text&lt;/a&gt; section. Lucky for us, 11ty lets you do a lot of pre-processing to prepare the right data structures you need in your templates using JavaScript, so I used &lt;a href=&quot;https://lodash.com/&quot;&gt;lodash&lt;/a&gt; to do the grouping for me:&lt;/p&gt;
&lt;pre class=&quot;shiki rose-pine-dawn&quot; style=&quot;background-color:#faf4ed;color:#575279&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; _&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; require&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;lodash&quot;&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#56949F&quot;&gt;module&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt;exports&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; function&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#907AA9;font-style:italic&quot;&gt;eleventyConfig&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;  eleventyConfig&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;addCollection&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;textByMonth&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#907AA9;font-style:italic&quot;&gt;collection&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&gt;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;    const&lt;/span&gt;&lt;span style=&quot;color:#D7827E;font-style:italic&quot;&gt; pad&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#907AA9;font-style:italic&quot;&gt; number&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&gt;&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;00&quot;&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; number&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;toString&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;())&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;slice&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;    const&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; month&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; [&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;JAN&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;FEB&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;MAR&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;APR&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;MAY&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;JUN&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;JUL&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;AUG&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;SEP&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;OCT&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;NOV&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;DEC&quot;&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;    return&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; _&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;chain&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;collection&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;getFilteredByTag&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;reverse&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;())&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;      .&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;groupBy&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#907AA9;font-style:italic&quot;&gt;text&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&gt;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;        let&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; date&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; text&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;page&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;date&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;        return&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; `&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;month&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;date&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;getUTCMonth&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;()]&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;}${&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;pad&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;date&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;getFullYear&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;())&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;`&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;      }&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;      .&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;toPairs&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;      .&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;value&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;()&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;  }&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;};&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This code is fragile: 1/ It depends on the collection being sorted by creation date in ascending order (before we reverse it). 2/ It depends on traversal order as specified by ECMAScript. But since I&#39;m in full control of the environment where this code runs (either my laptop or the CD environment), I&#39;m ok with this. The alternative would be to group by a key that is sortable, sort the resulting array by this key, then map this key back to a human-readable value. No reason to make things more complex than they need to be.&lt;/p&gt;
&lt;h3&gt;EXIF data&lt;/h3&gt;
&lt;p&gt;The next thing I wanted to do was automatically extract information like shutter speed, focal length, etc. from photos automatically from their &lt;a href=&quot;https://en.wikipedia.org/wiki/Exif&quot;&gt;EXIF data&lt;/a&gt;. Lucky for me, 11ty&#39;s documentation on &lt;a href=&quot;https://www.11ty.dev/docs/data-custom/&quot;&gt;custom data file formats&lt;/a&gt; describes this exact use-case. I picked a more up-to-date EXIF library, and used lodash again to help me get the data I needed. I also had to do some tweaking along the way to get things just right for me. Here&#39;s the final result:&lt;/p&gt;
&lt;pre class=&quot;shiki rose-pine-dawn&quot; style=&quot;background-color:#faf4ed;color:#575279&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; ExifReader&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; require&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;exifreader&quot;&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; _&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; require&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;lodash&quot;&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#56949F&quot;&gt;module&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt;exports&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; function&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#907AA9;font-style:italic&quot;&gt;eleventyConfig&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;  eleventyConfig&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;addDataExtension&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;jpg&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;    parser&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; async&lt;/span&gt;&lt;span style=&quot;color:#907AA9;font-style:italic&quot;&gt; file&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&gt;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;      const&lt;/span&gt;&lt;span style=&quot;color:#D7827E;font-style:italic&quot;&gt; exifDate&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#907AA9;font-style:italic&quot;&gt; value&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&gt;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;        const&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; [&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; date&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; time&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; ]&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; value&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;split&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&#39; &#39;&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;        return&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; new&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; Date&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;`&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;date&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;replaceAll&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&#39;:&#39;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &#39;-&#39;&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;T&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;time&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;.000Z`&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;      };&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;      const&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; tags&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; await&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; ExifReader&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;load&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;file&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;      const&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; config&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;        &quot;height&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;Image Height.value&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;        &quot;width&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;Image Width.value&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;        &quot;make&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;Make.description&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;        &quot;model&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;Model.description&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;        &quot;exposure&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;ExposureTime.description&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;        &quot;aperture&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;FNumber.description&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;        &quot;iso&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;ISOSpeedRatings.value&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;        &quot;focalLength&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;FocalLength.description&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;        &quot;lens&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;Lens.description&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;        &quot;date&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;DateTime.description&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;        &quot;originalDate&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;DateTimeOriginal.description&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;      };&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;      const&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; altModels&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;        &quot;EOS DIGITAL REBEL XSi&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;450D&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;      };&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;      let&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; exif&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; _&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;mapValues&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;config&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#907AA9;font-style:italic&quot;&gt; tag&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&gt;&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; _&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;get&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;tags&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; tag&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;))&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593;font-style:italic&quot;&gt;      //&lt;/span&gt;&lt;span style=&quot;color:#9893A5;font-style:italic&quot;&gt; Canon repeats the Make in the Model&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;      if&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;exif&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;model&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; &amp;#x26;&amp;#x26;&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; exif&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;make&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; &amp;#x26;&amp;#x26;&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; exif&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;model&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;startsWith&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;exif&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;make&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;        exif&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;model&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; exif&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;model&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;slice&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;exif&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;make&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt;length&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; +&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; 1&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593;font-style:italic&quot;&gt;      //&lt;/span&gt;&lt;span style=&quot;color:#9893A5;font-style:italic&quot;&gt; Use alternative Models&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;      if&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;exif&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;model&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; &amp;#x26;&amp;#x26;&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; exif&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;model&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; in&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; altModels&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;        exif&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;model&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; altModels&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;exif&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;model&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593;font-style:italic&quot;&gt;      //&lt;/span&gt;&lt;span style=&quot;color:#9893A5;font-style:italic&quot;&gt; Remove trailing `f/` to get fstop value&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;      if&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;exif&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;aperture&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;        exif&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;fstop&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; exif&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;aperture&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;slice&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;f/&quot;&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt;length&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;      else&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;        exif&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;fstop&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; undefined&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593;font-style:italic&quot;&gt;      //&lt;/span&gt;&lt;span style=&quot;color:#9893A5;font-style:italic&quot;&gt; Parse exif dates&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;      if&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;exif&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;date&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;exif&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;date&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; exifDate&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;exif&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;date&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;      if&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;exif&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;originalDate&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;exif&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;originalDate&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; exifDate&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;exif&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;originalDate&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;      return&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; exif&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; };&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;    },&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593;font-style:italic&quot;&gt;    //&lt;/span&gt;&lt;span style=&quot;color:#9893A5;font-style:italic&quot;&gt; Pass file path to `parser` rather than file contents&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279&quot;&gt;    read&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; false&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;  }&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;};&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Yes, all my input images are &lt;code&gt;*.jpg&lt;/code&gt;. I&#39;ll update this if that ever changes.&lt;/p&gt;
&lt;h3&gt;Responsive images&lt;/h3&gt;
&lt;p&gt;Keeping on the photos (and images in general), I also wanted to automatically convert all my images to &lt;a href=&quot;https://en.wikipedia.org/wiki/WebP&quot;&gt;WebP&lt;/a&gt; and provide images of different sizes to optimize bandwidth use for my visitors. Again, 11ty has you covered out of the box with the &lt;a href=&quot;https://www.11ty.dev/docs/plugins/image/&quot;&gt;Image plugin&lt;/a&gt;. However, this plugin appears designed to be used for embedding static content, so I had to adapt it to do the processing as part of the custom data pipeline, and provide my own shortcode:&lt;/p&gt;
&lt;pre class=&quot;shiki rose-pine-dawn&quot; style=&quot;background-color:#faf4ed;color:#575279&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; path&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; require&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;node:path&quot;&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; Image&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; require&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;@11ty/eleventy-img&quot;&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#56949F&quot;&gt;module&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt;exports&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; function&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#907AA9;font-style:italic&quot;&gt;eleventyConfig&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;  eleventyConfig&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;addDataExtension&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;jpg&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;    parser&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; async&lt;/span&gt;&lt;span style=&quot;color:#907AA9;font-style:italic&quot;&gt; file&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&gt;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593;font-style:italic&quot;&gt;      //&lt;/span&gt;&lt;span style=&quot;color:#9893A5;font-style:italic&quot;&gt; Generate mobile-optimized images for the photos&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;      let&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; responsive&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; undefined&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279&quot;&gt;      &lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;      if&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;file&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;startsWith&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;./src/photo/&quot;&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)) &lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;        const&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; stats&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; await&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; Image&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;file&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593;font-style:italic&quot;&gt;          //&lt;/span&gt;&lt;span style=&quot;color:#9893A5;font-style:italic&quot;&gt; widths generated by&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593;font-style:italic&quot;&gt;          //&lt;/span&gt;&lt;span style=&quot;color:#9893A5;font-style:italic&quot;&gt; https://github.com/peter-neumann-dev/responsive-image-linter&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279&quot;&gt;          widths&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; [&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;256&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;880&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;1220&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;1490&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;1710&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;1905&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;2048&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;auto&quot;&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279&quot;&gt;          formats&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; [&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;webp&quot;&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279&quot;&gt;          urlPath&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;/assets/photo/&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279&quot;&gt;          outputDir&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;./dist/assets/photo/&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;          filenameFormat&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#907AA9;font-style:italic&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#907AA9;font-style:italic&quot;&gt; src&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#907AA9;font-style:italic&quot;&gt; width&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#907AA9;font-style:italic&quot;&gt; format&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&gt;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;            const&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; extension&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; path&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;extname&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;src&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;            const&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; name&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; path&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;basename&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;src&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; extension&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279&quot;&gt;        &lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;            return&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; `&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;width&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;w.&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;format&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;`&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;          }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;        }&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;        responsive&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; stats&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;webp&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;      }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;      return&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; responsive&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; };&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;    },&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593;font-style:italic&quot;&gt;    //&lt;/span&gt;&lt;span style=&quot;color:#9893A5;font-style:italic&quot;&gt; Pass file path to `parser` rather than file contents&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279&quot;&gt;    read&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; false&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;  }&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;  eleventyConfig&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;addShortcode&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;image&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#907AA9;font-style:italic&quot;&gt;responsive&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#907AA9;font-style:italic&quot;&gt; alt&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#907AA9;font-style:italic&quot;&gt; sizes&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&gt;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;    const&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; largest&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; responsive&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;responsive&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt;length&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; 1&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;    const&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; srcset&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; responsive&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;map&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#907AA9;font-style:italic&quot;&gt;size&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&gt;&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; size&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;srcset&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;join&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;, &quot;&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;    return&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; `&amp;#x3C;img src=&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;largest&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;url&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot; srcset=&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;srcset&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot; sizes=&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;sizes&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot; width=&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;largest&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;width&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot; height=&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;largest&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;height&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot; alt=&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;alt&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot;&gt;`&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;  }&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;};&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A few more things to call-out: I&#39;m using my own paths here, and I also chose to do away with the &amp;quot;unique identifiers&amp;quot; the plugin generates by default, in favor of predictable filenames instead. I&#39;d also like to add a huge shout-out to the &lt;a href=&quot;https://github.com/peter-neumann-dev/responsive-image-linter&quot;&gt;Responsive Image Linter&lt;/a&gt; Chrome extension, which automatically resizes your webpage and provides a recommendation for both image resolutions and &lt;code&gt;&amp;lt;img sizes=&amp;quot;...&amp;quot; /&amp;gt;&lt;/code&gt; configuration.&lt;/p&gt;
&lt;p&gt;In my actual code both of these snippets are merged into a single processing pipeline. I&#39;ve split them here in for convenience in case anyone wants only one part of the functionality.&lt;/p&gt;
&lt;h3&gt;Better external links&lt;/h3&gt;
&lt;p&gt;I wanted to automatically make external links open in a new window by having &lt;code&gt;target=_blank&lt;/code&gt; added to them. And while at it, I also wanted to add &lt;code&gt;rel=&amp;quot;noopener noreferrer&amp;quot;&lt;/code&gt;. I built this as a filter using regular expressions for the parsing. I know, I know, HTML is not a regular language. But I don&#39;t need to parse HTML. I just need to find opening &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; tags, on HTML that ultimately I control, so this does the job perfectly well.&lt;/p&gt;
&lt;p&gt;I don&#39;t try to do anything smarter than that. If the attributes are not set, they will be set. If they are set, they will be left alone.&lt;/p&gt;
&lt;p&gt;This snippet needs to know where the website is hosted, so we get that information from the &lt;code&gt;homepage&lt;/code&gt; field in the &lt;code&gt;package.json&lt;/code&gt; file. Cute, right?&lt;/p&gt;
&lt;pre class=&quot;shiki rose-pine-dawn&quot; style=&quot;background-color:#faf4ed;color:#575279&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; pkg&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; require&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;./package.json&quot;&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#56949F&quot;&gt;module&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt;exports&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; function&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#907AA9;font-style:italic&quot;&gt;eleventyConfig&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;  const&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; linkStartTag&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; /&amp;#x3C;a href=&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;([&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;^&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;([&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;^&gt;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;ig&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;  const&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; targetAttr&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; /target=/&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;ig&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;  const&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; relAttr&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; /rel=/&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;ig&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;  const&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; origin&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; }&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; new&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; URL&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;pkg&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;homepage&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;  eleventyConfig&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;addFilter&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;safeLinks&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#907AA9;font-style:italic&quot;&gt; value&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&gt;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;    return&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; value&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;replaceAll&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;linkStartTag&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#907AA9;font-style:italic&quot;&gt;oldValue&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#907AA9;font-style:italic&quot;&gt; linkUrl&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#907AA9;font-style:italic&quot;&gt; attrs&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&gt;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;      let&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; url&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; new&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; URL&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;linkUrl&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; origin&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279&quot;&gt;      &lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;      if&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;url&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;origin&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; !==&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; origin&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;        return&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; `&amp;#x3C;a href=&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;linkUrl&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;targetAttr&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;test&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;attrs&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; ?&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; ` target=&quot;_blank&quot;`&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; :&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;}${&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;relAttr&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;test&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;attrs&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; ?&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; ` rel=&quot;noopener noreferrer&quot;`&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; :&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;}${&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;attrs&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&gt;`&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;      else&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;        return&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; oldValue&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;    }&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;  }&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;};&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Drafts&lt;/h3&gt;
&lt;p&gt;Somewhere in the 11ty docs they suggest using a &lt;code&gt;_drafts&lt;/code&gt; folder, and I liked the idea. At the same time, I wanted to be able to test my drafts, so I configured 11ty to only ignore drafts in production, using the same logic as the that eleventy-sass plugin uses (I just copied their code here).&lt;/p&gt;
&lt;pre class=&quot;shiki rose-pine-dawn&quot; style=&quot;background-color:#faf4ed;color:#575279&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#56949F&quot;&gt;module&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt;exports&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; function&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#907AA9;font-style:italic&quot;&gt;eleventyConfig&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593;font-style:italic&quot;&gt;  //&lt;/span&gt;&lt;span style=&quot;color:#9893A5;font-style:italic&quot;&gt; Environment-sensitive configuration&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;  const&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; ELEVENTY_ENV&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; }&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; process&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;env&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279&quot;&gt;  &lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593;font-style:italic&quot;&gt;  //&lt;/span&gt;&lt;span style=&quot;color:#9893A5;font-style:italic&quot;&gt; Use same logic as `eleventy-sass` for now&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;  if&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;ELEVENTY_ENV&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; ===&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; undefined&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; ||&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;production&quot;&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;startsWith&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;ELEVENTY_ENV&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)) &lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593;font-style:italic&quot;&gt;    //&lt;/span&gt;&lt;span style=&quot;color:#9893A5;font-style:italic&quot;&gt; Ignore `_drafts`&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;    eleventyConfig&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;ignores&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;add&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;**/_drafts/**&quot;&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;  }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;};&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I&#39;ve created folders for the different content categories in my site (text, photo, etc.), and I have a &lt;code&gt;_drafts&lt;/code&gt; folder inside each of these folders. Since I&#39;m already using folder data files for each of my content categories, I enhanced the computed data to automatically remove &lt;code&gt;_drafts&lt;/code&gt; from the generated content path, so that I can fully test draft content with the same URLs as I would have in production.&lt;/p&gt;
&lt;pre class=&quot;shiki rose-pine-dawn&quot; style=&quot;background-color:#faf4ed;color:#575279&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#56949F&quot;&gt;module&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt;exports&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279&quot;&gt;  eleventyComputed&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;    permalink&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#907AA9;font-style:italic&quot;&gt; data&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&gt;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;      if&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;data&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;page&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;filePathStem&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;includes&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;/_drafts/&quot;&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)) &lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;        return&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; `&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;data&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;page&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;filePathStem&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;replace&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;/_drafts/&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;/&quot;&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;/`&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;      }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;    }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;  }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;};&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Feature flags&lt;/h3&gt;
&lt;p&gt;Actually, I left a couple of lines out of that &amp;quot;Environment-sensitive configuration&amp;quot; snippet. Here&#39;s how it really looks like:&lt;/p&gt;
&lt;pre class=&quot;shiki rose-pine-dawn&quot; style=&quot;background-color:#faf4ed;color:#575279&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#56949F&quot;&gt;module&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt;exports&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; function&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#907AA9;font-style:italic&quot;&gt;eleventyConfig&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593;font-style:italic&quot;&gt;  //&lt;/span&gt;&lt;span style=&quot;color:#9893A5;font-style:italic&quot;&gt; Environment-sensitive configuration&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;  const&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; ELEVENTY_ENV&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; }&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; process&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;env&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279&quot;&gt;  &lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593;font-style:italic&quot;&gt;  //&lt;/span&gt;&lt;span style=&quot;color:#9893A5;font-style:italic&quot;&gt; Use same logic as `eleventy-sass` for now&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;  if&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;ELEVENTY_ENV&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; ===&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; undefined&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; ||&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;production&quot;&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;startsWith&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;ELEVENTY_ENV&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)) &lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593;font-style:italic&quot;&gt;    //&lt;/span&gt;&lt;span style=&quot;color:#9893A5;font-style:italic&quot;&gt; Ignore `_drafts`&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;    eleventyConfig&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;ignores&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;add&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;**/_drafts/**&quot;&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;  }&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; else&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593;font-style:italic&quot;&gt;    //&lt;/span&gt;&lt;span style=&quot;color:#9893A5;font-style:italic&quot;&gt; Feature-flag for experimental features&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;    eleventyConfig&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;addGlobalData&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;experimental&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; true&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;  }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;};&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I&#39;m using this opportunity to conditionally set feature flags (at the moment just one, the &lt;code&gt;experimental&lt;/code&gt; flag). Just like &lt;code&gt;_drafts&lt;/code&gt; lets me work on content without publishing it, the &lt;code&gt;experimental&lt;/code&gt; flag lets me work on entire features without publishing them:&lt;/p&gt;
&lt;pre class=&quot;shiki rose-pine-dawn&quot; style=&quot;background-color:#faf4ed;color:#575279&quot;&gt;&lt;code class=&quot;language-handlebars&quot;&gt;&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279&quot;&gt;{%- if experimental %}&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#9893A5&quot;&gt;&amp;#x3C;&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt;h1&lt;/span&gt;&lt;span style=&quot;color:#9893A5&quot;&gt;&gt;&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;my next amazing feature&lt;/span&gt;&lt;span style=&quot;color:#9893A5&quot;&gt;&amp;#x3C;/&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt;h1&lt;/span&gt;&lt;span style=&quot;color:#9893A5&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279&quot;&gt;{%- endif %}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This way I can be in the middle of working on a new feature, and still be able to publish a hotfix to production without having to create a new branch or stash my work in progress.&lt;/p&gt;
&lt;h3&gt;Syntax Highlighting&lt;/h3&gt;
&lt;p&gt;As I was writing this, I needed to add some syntax highlighting support for the code samples. I tried the &lt;a href=&quot;https://www.11ty.dev/docs/plugins/syntaxhighlight/&quot;&gt;official plugin&lt;/a&gt; which uses &lt;a href=&quot;https://prismjs.com/&quot;&gt;PrismJS&lt;/a&gt;. It worked, but it needed its CSS to be loaded externally. PrismJS itself felt clunky and outdated, and I could not find a theme I liked, so I started looking for alternatives.&lt;/p&gt;
&lt;p&gt;Luckily for me, things in 11ty are relatively straightforward. Markdown itself is processed by &lt;a href=&quot;https://github.com/markdown-it/markdown-it&quot;&gt;markdown-it&lt;/a&gt;, and this component can be &lt;a href=&quot;https://www.11ty.dev/docs/languages/markdown/&quot;&gt;easily enhanced and/or reconfigured&lt;/a&gt; if needed.&lt;/p&gt;
&lt;p&gt;With that in mind, I settled for &lt;a href=&quot;https://shiki.style/&quot;&gt;Shiki&lt;/a&gt; as a better alternative. This highlighter comes with its own &lt;a href=&quot;https://shiki.style/packages/markdown-it&quot;&gt;markdown-it plugin&lt;/a&gt;, and has a &lt;a href=&quot;https://shiki.style/guide/transformers&quot;&gt;nice API&lt;/a&gt; for further enhancing the generated output.&lt;/p&gt;
&lt;p&gt;There are a couple of things to consider though: I&#39;ve been working with CommonJS modules thus far, because I&#39;m an old fart, but Shiki ship as an ECMAScript module only. That means using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/import&quot;&gt;dynamic import&lt;/a&gt; syntax, which loads the module asynchronously and returns a &lt;code&gt;Promise&lt;/code&gt; that resolves to the module. This is not a problem, except 11ty does not support async functions as arguments for &lt;code&gt;eleventyConfig.amendLibrary&lt;/code&gt;. The &lt;a href=&quot;https://github.com/11ty/eleventy-plugin-syntaxhighlight/issues/32#issuecomment-1410641845&quot;&gt;current workaround&lt;/a&gt;, until 11ty V3 releases with support for async configuration functions, is to use the &lt;code&gt;eleventy.before&lt;/code&gt; event, as event handlers can be async.&lt;/p&gt;
&lt;pre class=&quot;shiki rose-pine-dawn&quot; style=&quot;background-color:#faf4ed;color:#575279&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; _Shiki&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; import&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;@shikijs/markdown-it&quot;&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#56949F&quot;&gt;module&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt;exports&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; function&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#907AA9;font-style:italic&quot;&gt;eleventyConfig&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593;font-style:italic&quot;&gt;  //&lt;/span&gt;&lt;span style=&quot;color:#9893A5;font-style:italic&quot;&gt; Workaround until amendLibrary supports async functions&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;  eleventyConfig&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;on&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;eleventy.before&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; async&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; ()&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&gt;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;    const&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;span style=&quot;color:#D7827E;font-style:italic&quot;&gt; default&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; Shiki&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; }&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; await&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; _Shiki&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;    const&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; metaUnquoted&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; /&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;([&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;&#92;w&#92;-_&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(?!&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)([&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;^&#92;s&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;ig&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;    const&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; metaQuoted&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; /&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;([&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;&#92;w&#92;-_&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;=&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;([&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;^&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;/&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;ig&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;    const&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; syntaxHighlighter&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; await&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; Shiki&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279&quot;&gt;      theme&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;rose-pine-dawn&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279&quot;&gt;      transformers&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; [&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;        pre&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#907AA9;font-style:italic&quot;&gt;node&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;          let&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; rawMeta&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; this&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;options&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;meta&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;__raw&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;          if&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;rawMeta&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;startsWith&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;[&quot;&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;&amp;#x26;&amp;#x26;&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; rawMeta&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;endsWith&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;]&quot;&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;            rawMeta&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; rawMeta&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;slice&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;          const&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; matches&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; [&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;            ...&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;rawMeta&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;matchAll&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;metaUnquoted&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;            ...&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;rawMeta&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;matchAll&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;metaQuoted&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279&quot;&gt;          ]&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;map&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;([&lt;/span&gt;&lt;span style=&quot;color:#907AA9;font-style:italic&quot;&gt;oldValue&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#907AA9;font-style:italic&quot;&gt; key&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#907AA9;font-style:italic&quot;&gt; value&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;])&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&gt;&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; [&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;key&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; value&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;])&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;          for&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;let&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; [&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;key&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; value&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; of&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; matches&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;            if&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;key&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; ===&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;class&quot;&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;              this&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;addClassToHast&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;node&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; value&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;            }&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; else&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;              if&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;key&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;startsWith&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;data-&quot;&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)) &lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;key&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; key&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;slice&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;data-&quot;&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt;length&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;              node&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;properties&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;`data-&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;key&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;`&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;] &lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; value&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;            }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;          }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;          delete&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; node&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;properties&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;tabindex&quot;&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;        }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;      }&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;    }&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;    eleventyConfig&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;amendLibrary&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;md&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#907AA9;font-style:italic&quot;&gt; mdLib&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&gt;&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; mdLib&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;use&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;syntaxHighlighter&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;))&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;  }&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;};&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I took the liberty of providing a basic transformer that removes the &lt;code&gt;tabindex&lt;/code&gt; property from the &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; tag (Is there a reason to want to make these available to tab navigation that I&#39;m not getting?), as well as allowing additional classes and attributes to be defined by adding them next to the code block fence, like so:&lt;/p&gt;
&lt;pre class=&quot;shiki rose-pine-dawn line-numbers diff&quot; style=&quot;background-color:#faf4ed;color:#575279&quot; data-start-line=&quot;53&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;```&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;js [class=&quot;line-numbers diff&quot; start-line=53]&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593;font-style:italic&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#9893A5;font-style:italic&quot;&gt; (... code here ...)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;```&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can inspect the source of this page and see this working for the code block above.&lt;/p&gt;
&lt;h3&gt;Better Indent&lt;/h3&gt;
&lt;p&gt;I&#39;ve been using Nunjuck&#39;s &lt;a href=&quot;https://mozilla.github.io/nunjucks/templating.html#indent&quot;&gt;indent&lt;/a&gt; filter to ensure that content included in layouts has the right indentation in the overall generated HTML. Sadly, I had to make an exception for code blocks, as &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; render their content including whitespace.&lt;/p&gt;
&lt;p&gt;Anyway, I wrote my own indent filter that skips &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; blocks:&lt;/p&gt;
&lt;pre class=&quot;shiki rose-pine-dawn&quot; style=&quot;background-color:#faf4ed;color:#575279&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#56949F&quot;&gt;module&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt;exports&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; function&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#907AA9;font-style:italic&quot;&gt;eleventyConfig&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;  const&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; preStartTag&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; /&amp;#x3C;pre&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;([&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;^&gt;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;ig&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;  const&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; preEndTag&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; /&amp;#x3C;&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;&#92;/&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;pre&gt;/&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;ig&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;  eleventyConfig&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;addFilter&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;betterIndent&quot;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#907AA9;font-style:italic&quot;&gt;value&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#907AA9;font-style:italic&quot;&gt; spaces&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&gt;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;    const&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; [&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;first&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; ...&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;rest&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; value&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;split&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;&#92;n&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;    let&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; newValue&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; first&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;    let&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; insidePre&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; preStartTag&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;test&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;first&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;    for&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;let&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; line&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; of&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; rest&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;      if&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;preStartTag&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;test&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;line&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)) &lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;        insidePre&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; true&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;      }&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; else&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;        if&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;insidePre&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;line&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; `&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;repeat&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;spaces&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;}${&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;line&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;`&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;        if&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;preEndTag&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;test&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;line&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)) &lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;insidePre&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; false&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;      }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;      newValue&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; +=&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; `&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;&#92;n&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;line&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;`&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;    }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;    return&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; newValue&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;trimEnd&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;()&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;  }&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;};&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Git&lt;/h3&gt;
&lt;p&gt;I thought it would be cool to show the currently deployed version by displaying information about the current commit. I&#39;m just using &lt;code&gt;child_process&lt;/code&gt; to call the Git CLI directly and providing what I need as a global data file:&lt;/p&gt;
&lt;pre class=&quot;shiki rose-pine-dawn&quot; style=&quot;background-color:#faf4ed;color:#575279&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; util&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; require&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&#39;node:util&#39;&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; exec&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; util&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;promisify&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;require&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;node:child_process&quot;&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;exec&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#56949F&quot;&gt;module&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt;exports&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; async&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; ()&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&gt;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;  const&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; stdout&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; }&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; await&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; exec&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;git log -1 --format=%H%n%h%n%cI%n%s&quot;&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;  const&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; [&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;hash&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; shortHash&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; date&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; subject&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; stdout&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;split&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;&#92;n&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279&quot;&gt;  &lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;  return&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;    hash&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;    shortHash&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279&quot;&gt;    date&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; new&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; Date&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;date&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;    subject&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;  };&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;};&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then I thought it would be even cooler to show a git-powered revision history, so I did it all over again as a folder data file:&lt;/p&gt;
&lt;pre class=&quot;shiki rose-pine-dawn&quot; style=&quot;background-color:#faf4ed;color:#575279&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; util&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; require&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&#39;node:util&#39;&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; exec&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; util&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;promisify&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;require&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;node:child_process&quot;&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;exec&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#56949F&quot;&gt;module&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt;exports&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;    history&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; async&lt;/span&gt;&lt;span style=&quot;color:#907AA9;font-style:italic&quot;&gt; data&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&gt;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;      if&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;data&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;page&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;fileSlug&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; !==&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;text&quot;&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;        const&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; stdout&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; }&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; await&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; exec&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;`git log --format=%H%n%h%n%cI%n%s%n &lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;data&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;page&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;inputPath&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;`&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;        const&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; history&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; stdout&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;trimEnd&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;()&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;split&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;&#92;n&#92;n&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;map&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#907AA9;font-style:italic&quot;&gt;logEntry&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&gt;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;          const&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; [&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;hash&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; shortHash&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; date&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; subject&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; logEntry&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;split&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;&#92;n&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;          return&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;            hash&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;            shortHash&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279&quot;&gt;            date&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; new&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; Date&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;date&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;            subject&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;          };&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;        }&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;        return&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; history&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;      }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;    }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;  }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Reading time&lt;/h3&gt;
&lt;p&gt;I wanted to provide an indicator of length for the text content, so I used the &lt;a href=&quot;https://github.com/ngryman/reading-time/&quot;&gt;reading-time&lt;/a&gt; library to add a word count and estimated reading time. I really wanted to get as precise a word count as possible, so I chose to re-load the Markdown and use that as the starting point (after skipping any Front Matter), rather than process the Markdown content already rendered into HTML and try to remove the tags:&lt;/p&gt;
&lt;pre class=&quot;shiki rose-pine-dawn&quot; style=&quot;background-color:#faf4ed;color:#575279&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; readFile&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; }&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; require&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&#39;node:fs/promises&#39;&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; readingTime&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; require&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&#39;reading-time&#39;&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#56949F&quot;&gt;module&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt;exports&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;    stats&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; async&lt;/span&gt;&lt;span style=&quot;color:#907AA9;font-style:italic&quot;&gt; data&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&gt;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;      if&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;data&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;page&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;fileSlug&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; !==&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &quot;text&quot;&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;        const&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; contents&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; await&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; readFile&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;data&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;page&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;inputPath&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt; encoding&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &#39;utf8&#39;&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; }&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;        const&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; fragments&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; contents&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;split&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;---&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;&#92;n&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;        const&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; words&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; minutes&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; }&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; =&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; readingTime&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;fragments&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;fragments&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt;length&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; -&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; 1&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;])&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#286983&quot;&gt;        return&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;          words&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279&quot;&gt;          minutes&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt; Math&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt;ceil&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#575279;font-style:italic&quot;&gt;minutes&lt;/span&gt;&lt;span style=&quot;color:#575279&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;        };&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;      }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;    }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;  }&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#575279&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ideally I would be able to configure &lt;code&gt;markdown-it&lt;/code&gt; to perform plain-text rendering with some additional tweaking such as completely ignoring code blocks. I tried going through the documentation but could not find a suitable example to use as a starting point, I guess I&#39;ll need to look at some plugins or similar and see if I can figure it out. For the time-being this will have to do.&lt;/p&gt;
&lt;h2&gt;Continuous Deployment&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;build-and-deploy&lt;/code&gt; workflow handles continuous deployment to GitHub Pages, with a twist: The repository that hosts the actual GitHub Pages is not this repository, it&#39;s &lt;a href=&quot;https://github.com/causti-co/causti-co.github.io&quot;&gt;causti-co/causti-co.github.io&lt;/a&gt;. So the deploy step is actually just pushing the latest static content into this repository, using &lt;a href=&quot;https://docs.github.com/en/authentication/connecting-to-github-with-ssh/managing-deploy-keys#deploy-keys&quot;&gt;deploy keys&lt;/a&gt;:&lt;/p&gt;
&lt;pre class=&quot;shiki rose-pine-dawn&quot; style=&quot;background-color:#faf4ed;color:#575279&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#56949F&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; build and deploy&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#56949F&quot;&gt;jobs&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#56949F&quot;&gt;  deploy&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#56949F&quot;&gt;    runs-on&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; ubuntu-latest&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#56949F&quot;&gt;    needs&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; build&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#56949F&quot;&gt;    steps&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;    -&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; uses&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; actions/checkout@v4&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#56949F&quot;&gt;      with&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#56949F&quot;&gt;        repository&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; causti-co/causti-co.github.io&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#56949F&quot;&gt;        ssh-key&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; &#39;${{ secrets.DEPLOY_KEY }}&#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;    -&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; uses&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; actions/download-artifact@v4&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#56949F&quot;&gt;      with&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#56949F&quot;&gt;        name&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; dist-bundle&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;    -&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; name&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; git config&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#56949F&quot;&gt;      run&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#286983&quot;&gt; |&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;        git config --global user.name &quot;${{ github.event.head_commit.author.name }}&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt;        git config --global user.email &quot;${{ github.event.head_commit.author.email }}&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;    -&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; run&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; git add .&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;    -&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; run&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; git commit -am &quot;${{ github.event.head_commit.message }}&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#56949F&quot;&gt;      continue-on-error&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#D7827E&quot;&gt; true&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span style=&quot;color:#797593&quot;&gt;    -&lt;/span&gt;&lt;span style=&quot;color:#56949F&quot;&gt; run&lt;/span&gt;&lt;span style=&quot;color:#797593&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#EA9D34&quot;&gt; git push&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can use the event data provided by GitHub actions at &lt;code&gt;github.event.head_commit&lt;/code&gt; to reuse the information from the latest commit of this repo when pushing to the deployment repository. Also, we want the &lt;code&gt;git commit&lt;/code&gt; step to tolerate errors: This step will fail when the working tree is empty (e.g., when there&#39;s nothing to commit). This just means that whatever we changed had no effect on the generated content. This is not an error, and we do not want the workflow to fail and get paged.&lt;/p&gt;
&lt;p&gt;So, why am I deploying to a different repository just to use GitHub Pages over there and not here? Because I really did not want to use &lt;code&gt;docs/&lt;/code&gt; for GitHub Pages, and the only way I&#39;d be happy with the static content sitting at the root of a repository is by having a dedicated repository just for the static content.&lt;/p&gt;
&lt;p&gt;Overall I&#39;m happy with this approach, and from the point of view of this repository, we&#39;re 100% agnostic of GitHub Pages which makes it easier for me to change hosting providers in the future.&lt;/p&gt;
&lt;h2&gt;What&#39;s next?&lt;/h2&gt;
&lt;p&gt;Well, I now have a personal website. The first priority will be to keep it fresh with content. I&#39;ve a &lt;a href=&quot;https://github.com/causti-co/website/blob/main/docs/ideas.md&quot;&gt;backlog of content ideas&lt;/a&gt; (and as a matter of fact, it was &lt;a href=&quot;https://github.com/causti-co/website/tree/26b720d50f9fea29dfd2bb140d6dd8e55a6c7b6e&quot;&gt;the first thing I did in this repository&lt;/a&gt;, even before starting with the design), that I&#39;ll be working through, and thanks to the drafts I can decouple authoring from publishing.&lt;/p&gt;
&lt;p&gt;I&#39;ll try to keep to one text and one photo per week, and see how I feel with that rhythm.&lt;/p&gt;
&lt;p&gt;Meanwhile, I&#39;ve also a &lt;a href=&quot;https://github.com/causti-co/website/blob/main/docs/todo.md&quot;&gt;backlog of website features&lt;/a&gt; to work on whenever I get the urge to ship something before my next publishing date comes up. Let&#39;s see. So far, I&#39;ve been having a blast. I hope you stay along for the ride.&lt;/p&gt;

    </content>
  </entry>
  <entry>
    <category term="photo" />
    <title>mi primer album va a ser un exito</title>
    <link href="https://causti.co/photo/009-mi-primer-album-va-a-ser-un-exito/" />
    <link rel="alternate" type="text/html" href="https://causti.co/photo/009-mi-primer-album-va-a-ser-un-exito/" />
    <link rel="alternate" type="image/webp" href="https://causti.co/assets/photo/009-mi-primer-album-va-a-ser-un-exito-2268w.webp" />
    <id>https://causti.co/photo/009-mi-primer-album-va-a-ser-un-exito/</id>
    <updated>2024-04-19T00:00:00Z</updated>
    <published>2024-04-19T00:00:00Z</published>
    <summary>A man in a white shirt is looking down a glass ceiling. He&#39;s resting against a bright yellow handrail that creates a sharp angle across the frame. We can see his reflection in the glass looking back at him.</summary>
    <content type="html">
      &lt;img src=&quot;https://causti.co/assets/photo/009-mi-primer-album-va-a-ser-un-exito-2268w.webp&quot; srcset=&quot;https://causti.co/assets/photo/009-mi-primer-album-va-a-ser-un-exito-256w.webp 256w, https://causti.co/assets/photo/009-mi-primer-album-va-a-ser-un-exito-880w.webp 880w, https://causti.co/assets/photo/009-mi-primer-album-va-a-ser-un-exito-1220w.webp 1220w, https://causti.co/assets/photo/009-mi-primer-album-va-a-ser-un-exito-1490w.webp 1490w, https://causti.co/assets/photo/009-mi-primer-album-va-a-ser-un-exito-1710w.webp 1710w, https://causti.co/assets/photo/009-mi-primer-album-va-a-ser-un-exito-1905w.webp 1905w, https://causti.co/assets/photo/009-mi-primer-album-va-a-ser-un-exito-2048w.webp 2048w, https://causti.co/assets/photo/009-mi-primer-album-va-a-ser-un-exito-2268w.webp 2268w&quot; sizes=&quot;100vw&quot; width=&quot;2268&quot; height=&quot;2268&quot; alt=&quot;A man in a white shirt is looking down a glass ceiling. He&#39;s resting against a bright yellow handrail that creates a sharp angle across the frame. We can see his reflection in the glass looking back at him.&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; /&gt;
    </content>
  </entry>
  <entry>
    <category term="recs" />
    <title>Peep Show</title>
    <link href="https://causti.co/recs/" />
    <link rel="alternate" type="text/html" href="https://causti.co/recs/" />
    <link rel="related" type="text/html" href="https://archive.org/details/peep-show-series1" />
    <link rel="alternate" type="image/jpeg" href="https://causti.co/assets/recs/004-peep-show.jpg" />
    <id>https://causti.co/recs/</id>
    <updated>2024-04-19T00:00:00Z</updated>
    <published>2024-04-19T00:00:00Z</published>
    <summary>Peep Show</summary>
    <content type="html">
      &lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/I.Sat&quot;&gt;We had good cable in Argentina&lt;/a&gt;. My theory is that this was mostly economy-driven: We got anime because it was cheaper to license these strange cartoons from Japan that nobody knew about, than the hits from the US. And it was the same with comedy, we got a lot of British shows that nobody had heard about.&lt;/p&gt;
&lt;p&gt;Peep Show was one of them. I won&#39;t try to describe the show, you need to go and watch it, and I&#39;ve linked the first season which someone uploaded to &lt;a href=&quot;https://archive.org/&quot;&gt;The Internet Archive&lt;/a&gt;. Ok, ok, I&#39;ll try to describe it, but I&#39;ll keep it very short and simple: &lt;a href=&quot;https://www.youtube.com/watch?v=vRBsaJPkt2Q&quot;&gt;Cringe&lt;/a&gt;. You&#39;re not supposed to know what goes on inside the minds of this kind of people, but you do, and you&#39;re forced to on the ride with them. This was also my first contact with &lt;a href=&quot;https://en.wikipedia.org/wiki/David_Mitchell_(comedian)&quot;&gt;David Mitchell&lt;/a&gt;. He&#39;s, unsurprisingly, my kind of person.&lt;/p&gt;

    </content>
  </entry>
  <entry>
    <category term="photo" />
    <title>sala nueve</title>
    <link href="https://causti.co/photo/008-sala-nueve/" />
    <link rel="alternate" type="text/html" href="https://causti.co/photo/008-sala-nueve/" />
    <link rel="alternate" type="image/webp" href="https://causti.co/assets/photo/008-sala-nueve-4272w.webp" />
    <id>https://causti.co/photo/008-sala-nueve/</id>
    <updated>2024-04-18T00:00:00Z</updated>
    <published>2024-04-18T00:00:00Z</published>
    <summary>A dark, empty room. To the left, light pours in from an adjacent hallway. The top of the passageway between the room and the hallway is shaped like a triangle, casting a mirror image of light against the back wall of the dark room.</summary>
    <content type="html">
      &lt;img src=&quot;https://causti.co/assets/photo/008-sala-nueve-4272w.webp&quot; srcset=&quot;https://causti.co/assets/photo/008-sala-nueve-256w.webp 256w, https://causti.co/assets/photo/008-sala-nueve-880w.webp 880w, https://causti.co/assets/photo/008-sala-nueve-1220w.webp 1220w, https://causti.co/assets/photo/008-sala-nueve-1490w.webp 1490w, https://causti.co/assets/photo/008-sala-nueve-1710w.webp 1710w, https://causti.co/assets/photo/008-sala-nueve-1905w.webp 1905w, https://causti.co/assets/photo/008-sala-nueve-2048w.webp 2048w, https://causti.co/assets/photo/008-sala-nueve-4272w.webp 4272w&quot; sizes=&quot;100vw&quot; width=&quot;4272&quot; height=&quot;2848&quot; alt=&quot;A dark, empty room. To the left, light pours in from an adjacent hallway. The top of the passageway between the room and the hallway is shaped like a triangle, casting a mirror image of light against the back wall of the dark room.&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; /&gt;
    </content>
  </entry>
  <entry>
    <category term="photo" />
    <title>tengo calor</title>
    <link href="https://causti.co/photo/007-tengo-calor/" />
    <link rel="alternate" type="text/html" href="https://causti.co/photo/007-tengo-calor/" />
    <link rel="alternate" type="image/webp" href="https://causti.co/assets/photo/007-tengo-calor-3089w.webp" />
    <id>https://causti.co/photo/007-tengo-calor/</id>
    <updated>2024-04-17T00:00:00Z</updated>
    <published>2024-04-17T00:00:00Z</published>
    <summary>A black and white photo of the inside of a bus. Two kids are sitting down, with a lady tending to one of them while the second kid is sliding the bus window open.</summary>
    <content type="html">
      &lt;img src=&quot;https://causti.co/assets/photo/007-tengo-calor-3089w.webp&quot; srcset=&quot;https://causti.co/assets/photo/007-tengo-calor-256w.webp 256w, https://causti.co/assets/photo/007-tengo-calor-880w.webp 880w, https://causti.co/assets/photo/007-tengo-calor-1220w.webp 1220w, https://causti.co/assets/photo/007-tengo-calor-1490w.webp 1490w, https://causti.co/assets/photo/007-tengo-calor-1710w.webp 1710w, https://causti.co/assets/photo/007-tengo-calor-1905w.webp 1905w, https://causti.co/assets/photo/007-tengo-calor-2048w.webp 2048w, https://causti.co/assets/photo/007-tengo-calor-3089w.webp 3089w&quot; sizes=&quot;100vw&quot; width=&quot;3089&quot; height=&quot;2048&quot; alt=&quot;A black and white photo of the inside of a bus. Two kids are sitting down, with a lady tending to one of them while the second kid is sliding the bus window open.&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; /&gt;
    </content>
  </entry>
  <entry>
    <category term="photo" />
    <title>esquinas eran las de antes</title>
    <link href="https://causti.co/photo/006-esquinas-eran-las-de-antes/" />
    <link rel="alternate" type="text/html" href="https://causti.co/photo/006-esquinas-eran-las-de-antes/" />
    <link rel="alternate" type="image/webp" href="https://causti.co/assets/photo/006-esquinas-eran-las-de-antes-3042w.webp" />
    <id>https://causti.co/photo/006-esquinas-eran-las-de-antes/</id>
    <updated>2024-04-16T00:00:00Z</updated>
    <published>2024-04-16T00:00:00Z</published>
    <summary>A black and white photo of a traditional street corner in Buenos Aires. There&#39;s a store directly in the corner, but it&#39;s unclear if it&#39;s still in business, and the walls are covered in grafitti tags.</summary>
    <content type="html">
      &lt;img src=&quot;https://causti.co/assets/photo/006-esquinas-eran-las-de-antes-3042w.webp&quot; srcset=&quot;https://causti.co/assets/photo/006-esquinas-eran-las-de-antes-256w.webp 256w, https://causti.co/assets/photo/006-esquinas-eran-las-de-antes-880w.webp 880w, https://causti.co/assets/photo/006-esquinas-eran-las-de-antes-1220w.webp 1220w, https://causti.co/assets/photo/006-esquinas-eran-las-de-antes-1490w.webp 1490w, https://causti.co/assets/photo/006-esquinas-eran-las-de-antes-1710w.webp 1710w, https://causti.co/assets/photo/006-esquinas-eran-las-de-antes-1905w.webp 1905w, https://causti.co/assets/photo/006-esquinas-eran-las-de-antes-2048w.webp 2048w, https://causti.co/assets/photo/006-esquinas-eran-las-de-antes-3042w.webp 3042w&quot; sizes=&quot;100vw&quot; width=&quot;3042&quot; height=&quot;1986&quot; alt=&quot;A black and white photo of a traditional street corner in Buenos Aires. There&#39;s a store directly in the corner, but it&#39;s unclear if it&#39;s still in business, and the walls are covered in grafitti tags.&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; /&gt;
    </content>
  </entry>
  <entry>
    <category term="photo" />
    <title>cuando sea grande; cuando ya no este muerto</title>
    <link href="https://causti.co/photo/005-cuando-sea-grande-cuando-ya-no-este-muerto/" />
    <link rel="alternate" type="text/html" href="https://causti.co/photo/005-cuando-sea-grande-cuando-ya-no-este-muerto/" />
    <link rel="alternate" type="image/webp" href="https://causti.co/assets/photo/005-cuando-sea-grande-cuando-ya-no-este-muerto-4272w.webp" />
    <id>https://causti.co/photo/005-cuando-sea-grande-cuando-ya-no-este-muerto/</id>
    <updated>2024-04-15T00:00:00Z</updated>
    <published>2024-04-15T00:00:00Z</published>
    <summary>A photo of multiple empty bodies of what appear to be ATMs. All electronics have been removed, and the bodies lie standing next to eachother in the corner of a yellow room.</summary>
    <content type="html">
      &lt;img src=&quot;https://causti.co/assets/photo/005-cuando-sea-grande-cuando-ya-no-este-muerto-4272w.webp&quot; srcset=&quot;https://causti.co/assets/photo/005-cuando-sea-grande-cuando-ya-no-este-muerto-256w.webp 256w, https://causti.co/assets/photo/005-cuando-sea-grande-cuando-ya-no-este-muerto-880w.webp 880w, https://causti.co/assets/photo/005-cuando-sea-grande-cuando-ya-no-este-muerto-1220w.webp 1220w, https://causti.co/assets/photo/005-cuando-sea-grande-cuando-ya-no-este-muerto-1490w.webp 1490w, https://causti.co/assets/photo/005-cuando-sea-grande-cuando-ya-no-este-muerto-1710w.webp 1710w, https://causti.co/assets/photo/005-cuando-sea-grande-cuando-ya-no-este-muerto-1905w.webp 1905w, https://causti.co/assets/photo/005-cuando-sea-grande-cuando-ya-no-este-muerto-2048w.webp 2048w, https://causti.co/assets/photo/005-cuando-sea-grande-cuando-ya-no-este-muerto-4272w.webp 4272w&quot; sizes=&quot;100vw&quot; width=&quot;4272&quot; height=&quot;2848&quot; alt=&quot;A photo of multiple empty bodies of what appear to be ATMs. All electronics have been removed, and the bodies lie standing next to eachother in the corner of a yellow room.&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; /&gt;
    </content>
  </entry>
</feed>